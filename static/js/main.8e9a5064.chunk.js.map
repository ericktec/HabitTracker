{"version":3,"sources":["containers/LogIn/LogInSideImage.jpeg","firebase.js","contexts/AuthContext.js","containers/LogIn/LogIn.jsx","containers/SignUp/SignUp.jpeg","containers/SignUp/SignUp.jsx","components/Calendar.jsx","containers/Tracking/Tracking.jsx","containers/ForgotPassword/LogInSideImage.jpeg","containers/ForgotPassword/ForgotPassword.jsx","containers/UpdateProfile/SignUp.jpeg","containers/UpdateProfile/UpdateProfile.jsx","containers/PrivateRoute.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["fb","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","then","sendEmailVerification","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","LogIn","userInfo","setUserInfo","history","useHistory","error","setError","onChangeInput","e","target","name","a","preventDefault","push","console","log","className","src","LogInSideImage","alt","onSubmit","onChange","type","disabled","to","SignUp","confirmPassword","signUpInfo","setSignUpInfo","matchPasswords","setMatchPasswords","SignUpImage","placeholder","Calendar","events","setEvents","collection","doc","uid","onSnapshot","snapshot","docChanges","forEach","event","oldEvents","data","filter","currentEvent","tempEvent","title","date","plugins","dayGridPlugin","interactionPlugin","initialView","dateClick","info","window","confirm","prompt","dateStr","add","id","catch","Tracking","onClick","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","defaultValue","PrivateRoute","Component","component","rest","render","props","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.8e9a5064.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LogInSideImage.191c5a3f.jpeg\";","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBsfOthOqglJ2ZESPt8tiZ4CntkuyOu470\",\r\n  authDomain: \"habittracker-24367.firebaseapp.com\",\r\n  projectId: \"habittracker-24367\",\r\n  storageBucket: \"habittracker-24367.appspot.com\",\r\n  messagingSenderId: \"537529296068\",\r\n  appId: \"1:537529296068:web:4261740ef6bbd3d59d1591\"\r\n};\r\n\r\nconst fb = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = fb.firestore();\r\n\r\n\r\n\r\nexport const auth = fb.auth();\r\n\r\n","import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  function signup(email, password) {\r\n    auth.createUserWithEmailAndPassword(email, password)\r\n    .then(user => {\r\n      return user.user.sendEmailVerification();\r\n    });\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email);\r\n  }\r\n\r\n  function updateEmail(email){\r\n    return currentUser.updateEmail(email);\r\n  }\r\n\r\n  function updatePassword(password){\r\n    return currentUser.updatePassword(password);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport LogInSideImage from \"./LogInSideImage.jpeg\";\r\nimport \"./LogIn.css\";\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction LogIn() {\r\n  \r\n  const [userInfo, setUserInfo] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n  const history = useHistory();\r\n  const { login } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name , value } = e.target;\r\n    setUserInfo({...userInfo, [name]: value});\r\n  };\r\n\r\n  async function submtiHandler(e) {\r\n    e.preventDefault();\r\n    if(userInfo.email && userInfo.password){\r\n      try {\r\n        setLoading(true);\r\n        await login(userInfo.email, userInfo.password);\r\n        return history.push('/tracking');\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    console.log(userInfo);\r\n  }\r\n\r\n  return (\r\n    <div className=\"logInBody\">\r\n      <img src={LogInSideImage} alt=\"LogIn\" />\r\n      <div className=\"formContainer\">\r\n        <form className=\"logInForm\" onSubmit={submtiHandler}>\r\n          <p>{error}</p>\r\n          <label>Correo electronico </label>\r\n          <input name=\"email\"  onChange={onChangeInput} type=\"text\" />\r\n          <label>Contraseña </label>\r\n          <input name=\"password\" onChange={onChangeInput} type=\"password\"/>\r\n          <button disabled={loading} type='submit' className=\"LogInButton\">Iniciar Sesión</button>\r\n          <Link to=\"/signUp\"><button className=\"SignUpButton\">Registrarse</button></Link>\r\n          <br/>\r\n          <Link to=\"/forgot-password\" className=\"forgetPassword\">¿Olvidaste tu contraseña?</Link>\r\n        </form>\r\n        <div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","export default __webpack_public_path__ + \"static/media/SignUp.191c5a3f.jpeg\";","import React, { useState } from \"react\";\r\nimport SignUpImage from \"./SignUp.jpeg\";\r\nimport \"./SignUp.css\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction SignUp() {\r\n  const [signUpInfo, setSignUpInfo] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const { signup } = useAuth();\r\n  const history = useHistory();\r\n  const [matchPasswords, setMatchPasswords] = useState(true);\r\n\r\n  const [error, setError] = useState('');\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setSignUpInfo({ ...signUpInfo, [name]: value });\r\n  };\r\n\r\n  async function signUpSubmit(e) {\r\n    e.preventDefault();\r\n    if (signUpInfo.password !== signUpInfo.confirmPassword) {\r\n      setMatchPasswords(false);\r\n    } else if (!signUpInfo.email) {\r\n      return;\r\n    } else {\r\n      try {\r\n        setError('');\r\n        setLoading(true)\r\n        await signup(signUpInfo.email, signUpInfo.password);\r\n        \r\n        return history.push('/tracking');\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"logInBody\">\r\n      <img src={SignUpImage} alt=\"LogIn\" />\r\n      <div className=\"formContainer\">\r\n        <form className=\"logInForm\" onSubmit={signUpSubmit}>\r\n          <label>Correo electronico </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            onChange={onChangeInput}\r\n            placeholder=\"example@mail.com\"\r\n          />\r\n          <label>Contraseña </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={onChangeInput}\r\n            placeholder=\".....\"\r\n          />\r\n          <input\r\n            className={\r\n              matchPasswords ? \"ConfirmPassword\" : \"ConfirmPasswordWrong\"\r\n            }\r\n            name=\"confirmPassword\"\r\n            onChange={onChangeInput}\r\n            type=\"password\"\r\n            placeholder=\"Confirma contraseña\"\r\n          />\r\n          <button type=\"submit\" className=\"SignUpButton\">\r\n            Registrarse\r\n          </button>\r\n          <Link to=\"/\">\r\n            <button disabled={loading} className=\"LogInButton\">Iniciar Sesión</button>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { useAuth } from '..//contexts/AuthContext'\r\nimport {db} from '../firebase';\r\n\r\n//https://fullcalendar.io/docs/react\r\n\r\nfunction Calendar() {\r\n\r\n  const [events, setEvents] = useState([\r\n  ]);\r\n\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n\r\n  useEffect(() => {\r\n    db.collection('users').doc(currentUser.uid).collection('hobbies').onSnapshot(snapshot => {\r\n      snapshot.docChanges().forEach(event => {\r\n        if(event.type === 'added'){\r\n          setEvents(oldEvents => [...oldEvents, event.doc.data()]);\r\n        }else if(event.type === 'removed'){\r\n          setEvents(oldEvents => {\r\n            return oldEvents.filter(currentEvent => {\r\n              let tempEvent = event.doc.data();\r\n              return tempEvent.title !== currentEvent.title && tempEvent.date !== currentEvent.date\r\n            })\r\n          })\r\n        }\r\n      })\r\n    })\r\n  }, [])\r\n\r\n\r\n  const handleDateClick = (info) => {\r\n    let answer = window.confirm(\"Did you completed your habit?\");\r\n    if(!answer){\r\n      return;\r\n    }\r\n    let response = prompt(\"Which one?\");\r\n    let event = {\r\n      title: response,\r\n      date: info.dateStr\r\n    };\r\n    db.collection('users').doc(currentUser.uid).collection('hobbies').add(event)\r\n    .then(doc => console.log('doc written with id ',doc.id))\r\n    .catch(e => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  return <FullCalendar plugins={[dayGridPlugin, interactionPlugin]} \r\n  events={events}\r\n  initialView=\"dayGridMonth\" dateClick={handleDateClick} \r\n  />;\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { useState } from 'react';\r\nimport Calendar from '../../components/Calendar';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nfunction Tracking()\r\n{\r\n\r\n  const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  async function handleLogOut(){\r\n    try {\r\n      await logout();\r\n      return history.push('/');\r\n    } catch (error) {\r\n      setError('Failed to log out');\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n    <h1>Welcome to your calendar {currentUser && currentUser.email}</h1>\r\n    <Link to=\"/updateProfile\"><button>Actualizar perfil</button></Link>\r\n    <Calendar />\r\n    <button onClick={handleLogOut}>Cerrar sesión</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tracking;","export default __webpack_public_path__ + \"static/media/LogInSideImage.191c5a3f.jpeg\";","import React, { useState } from \"react\";\r\nimport LogInSideImage from \"./LogInSideImage.jpeg\";\r\nimport \"./LogIn.css\";\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ForgotPassword() {\r\n\r\n  const [userInfo, setUserInfo] = useState({\r\n    email: \"\",\r\n  });\r\n  const { resetPassword } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name , value } = e.target;\r\n    setUserInfo({...userInfo, [name]: value});\r\n  };\r\n\r\n  async function submtiHandler(e) {\r\n    e.preventDefault();\r\n    if(userInfo.email){\r\n      try {\r\n        setLoading(true);\r\n        console.log(\"holaaaaa\");\r\n        await resetPassword(userInfo.email);\r\n        setMessage('Revisa tu email para restablecer tu contraseña');\r\n      } catch (error) {\r\n        setMessage(\"Hubo un error al restablecer tu contraseña\");\r\n        setError(error);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    console.log(userInfo);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"logInBody\">\r\n      <img src={LogInSideImage} alt=\"LogIn\" />\r\n      <div className=\"formContainer\">\r\n        <form className=\"logInForm\" onSubmit={submtiHandler}>\r\n          <label>Correo electronico </label>\r\n          <input name=\"email\"  onChange={onChangeInput} type=\"text\" />\r\n          <label>{message}</label>\r\n          <button disabled={loading} type='submit' className=\"LogInButton\">Reiniciar contraseña</button>\r\n          <br/>\r\n          <Link to=\"/\" className=\"forgetPassword\">Iniciar sesión</Link>\r\n        </form>\r\n        <div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/SignUp.191c5a3f.jpeg\";","import React, { useState } from \"react\";\r\nimport SignUpImage from \"./SignUp.jpeg\";\r\nimport \"./SignUp.css\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction UpdateProfile() {\r\n  \r\n  const { updatePassword, updateEmail, currentUser } = useAuth();\r\n  const history = useHistory();\r\n  const [matchPasswords, setMatchPasswords] = useState(true);\r\n  \r\n  const [signUpInfo, setSignUpInfo] = useState({\r\n    email: currentUser ? currentUser.email : '',\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    setSignUpInfo({ ...signUpInfo, [name]: value });\r\n  };\r\n\r\n  function signUpSubmit(e) {\r\n    e.preventDefault();\r\n    if (signUpInfo.password !== signUpInfo.confirmPassword) {\r\n      return setMatchPasswords(false);\r\n    } else {\r\n      const promises = []\r\n      if(currentUser.email !== signUpInfo.email){\r\n        promises.push(updateEmail(signUpInfo.email));\r\n        \r\n      }\r\n      if(signUpInfo.password){\r\n        promises.push(updatePassword(signUpInfo.password));\r\n      }\r\n      Promise.all(promises).then(() => {\r\n        return history.push('/tracking');\r\n      })\r\n      .catch(e => setError('Algo salio mal al actualizar tu perfil intentalo de nuevo'))\r\n      setLoading(false);\r\n    \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"logInBody\">\r\n      <img src={SignUpImage} alt=\"LogIn\" />\r\n      <div className=\"formContainer\">\r\n        <form className=\"logInForm\" onSubmit={signUpSubmit}>\r\n          <label>Correo electronico </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            onChange={onChangeInput}\r\n            placeholder=\"example@mail.com\"\r\n            defaultValue={currentUser.email}\r\n          />\r\n          <label>Contraseña </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={onChangeInput}\r\n            placeholder=\"Dejalo en blanco para mantener la misma contraseña\"\r\n          />\r\n          <input\r\n            className={\r\n              matchPasswords ? \"ConfirmPassword\" : \"ConfirmPasswordWrong\"\r\n            }\r\n            name=\"confirmPassword\"\r\n            onChange={onChangeInput}\r\n            type=\"password\"\r\n            placeholder=\"Dejalo en blanco para mantener la misma contraseña\"\r\n          />\r\n          <button disabled={loading} type=\"submit\" className=\"SignUpButton\">\r\n            Actualizar perfil\r\n          </button>\r\n          <Link to=\"/tracking\">\r\n            <button className=\"LogInButton\">Regresar a tu calendario</button>\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateProfile;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\n\r\nfunction PrivateRoute({ component : Component, ...rest }) {\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} />: <Redirect to=\"/\" />\r\n      }}\r\n    >\r\n      \r\n    </Route>\r\n  )\r\n}\r\n\r\n\r\nexport default PrivateRoute;","import './App.css';\nimport LogIn from './containers/LogIn/LogIn';\nimport SignUp from './containers/SignUp/SignUp';\nimport Tracking from './containers/Tracking/Tracking';\nimport ForgotPassword from './containers/ForgotPassword/ForgotPassword';\nimport UpdateProfile from './containers/UpdateProfile/UpdateProfile';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport {AuthProvider} from './contexts/AuthContext';\nimport PrivateRoute from './containers/PrivateRoute';\n\n\nfunction App() {\n  return (\n    <Router basename=\"/HabitTracker\">\n      <AuthProvider>\n        <Switch>\n          <Route exact path='/' component={LogIn}/>\n          <Route path=\"/signUp\" component={SignUp}  />\n          <Route path=\"/updateProfile\" component={UpdateProfile}  />\n          <PrivateRoute path='/tracking' component={Tracking}  />\n          <Route path=\"/forgot-password\" component={ForgotPassword} />\n        </Switch>\n      </AuthProvider>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './firebase';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}